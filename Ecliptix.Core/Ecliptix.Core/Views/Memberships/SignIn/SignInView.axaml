<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:authentication="clr-namespace:Ecliptix.Core.ViewModels.Authentication"
             xmlns:controls="clr-namespace:Ecliptix.Core.Controls"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d"
             d:DesignWidth="320"
             d:DesignHeight="400"
             x:DataType="authentication:SignInViewModel"
             x:Class="Ecliptix.Core.Views.Memberships.SignIn.SignInView"
             MinWidth="320"
             Width="320">

    <UserControl.Resources>
        <!-- Layout Dimensions (keeping your original values) -->
        <x:Double x:Key="ButtonHeight">45</x:Double>
        <x:Double x:Key="InputHeight">90</x:Double>
        <x:Double x:Key="InputFontSize">18</x:Double>
        <x:Double x:Key="ButtonFontSize">14</x:Double>
        <x:Double x:Key="TitleFontSize">16</x:Double>
        <x:Double x:Key="SubtitleFontSize">20</x:Double>
        <x:Double x:Key="HeaderMaxWidth">240</x:Double>

        <!-- Spacing (keeping your original spacing) -->
        <x:Double x:Key="SectionSpacing">15</x:Double>
        <x:Double x:Key="HeaderSpacing">8</x:Double>
        <x:Double x:Key="ButtonSpacing">10</x:Double>

        <!-- Corner Radius (keeping your original values) -->
        <CornerRadius x:Key="InputCornerRadius">5</CornerRadius>
        <CornerRadius x:Key="ButtonCornerRadius">15</CornerRadius>

        <!-- Transitions -->
        <system:TimeSpan x:Key="ButtonTransitionDuration">0:0:0.3</system:TimeSpan>

        <!-- Colors for hover states -->
        <Color x:Key="RecoveryButtonHoverColor">#E4E3E3</Color>
        <Color x:Key="RecoveryButtonPressedColor">#D1D0D0</Color>
    </UserControl.Resources>

    <UserControl.Styles>
        <!-- Button Base Style -->
        <Style Selector="Button.auth-button">
            <Setter Property="Height" Value="{StaticResource ButtonHeight}" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CornerRadius" Value="{StaticResource ButtonCornerRadius}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background" Duration="{StaticResource ButtonTransitionDuration}" />
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.15" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="Button.auth-button:pressed">
            <Setter Property="RenderTransform" Value="scale(0.98)" />
        </Style>

        <!-- Recovery Button Style -->
        <Style Selector="Button.recovery-button">
            <Setter Property="Background" Value="{DynamicResource LightButtonColor}" />
            <Setter Property="Foreground" Value="{DynamicResource LightButtonForegroundColor}" />
        </Style>

        <Style Selector="Button.recovery-button:pointerover">
            <Setter Property="Background" Value="{StaticResource RecoveryButtonHoverColor}" />
        </Style>

        <Style Selector="Button.recovery-button:pressed">
            <Setter Property="Background" Value="{StaticResource RecoveryButtonPressedColor}" />
        </Style>

        <!-- Continue Button Style -->
        <Style Selector="Button.continue-button">
            <Setter Property="Background" Value="{DynamicResource DarkButtonColor}" />
            <Setter Property="Foreground" Value="{DynamicResource DarkButtonForegroundColor}" />
        </Style>
    </UserControl.Styles>

    <!-- Main Grid (keeping your original structure but ensuring consistent width) -->
    <Grid VerticalAlignment="Center"
          RowSpacing="{StaticResource SectionSpacing}"
          RowDefinitions="Auto,Auto,Auto,Auto"
          HorizontalAlignment="Stretch"
          Width="320">

        <!-- Header Section (keeping your exact text design) -->
        <StackPanel Grid.Row="0"
                    Spacing="{StaticResource HeaderSpacing}"
                    MaxWidth="{StaticResource HeaderMaxWidth}"
                    HorizontalAlignment="Left">
            <TextBlock Text="Sign in"
                       FontSize="{StaticResource TitleFontSize}"
                       FontWeight="Light"
                       Foreground="{DynamicResource TextForegroundColor}"
                       LetterSpacing="-0.5"
                       LineHeight="25" />
            <TextBlock Text="Welcome back! Your personalized experience awaits."
                       TextWrapping="Wrap"
                       FontSize="{StaticResource SubtitleFontSize}"
                       LineHeight="28"
                       FontWeight="Light"
                       Foreground="{DynamicResource TextForegroundColor}" />
        </StackPanel>

        <!-- Mobile Number Input (keeping your exact design) -->
        <controls:HintedTextBox
            Grid.Row="1"
            x:Name="MobileTextBox"
            Watermark="Mobile Number"
            Hint="Start with country code."
            TextForeground="{DynamicResource TextBoxForegroundColor}"
            HintForeground="{DynamicResource TipsColor}"
            IconRegularSource="{DynamicResource LampIconDrawingRegular}"
            IconErrorSource="{DynamicResource LampIconDrawingError}"
            FocusBorderBrush="{DynamicResource TipsColor}"
            ValidationType="PhoneNumber"
            MainBorderBrush="Transparent"
            Text="{Binding PhoneNumber}"
            Height="{StaticResource InputHeight}"
            CornerRadius="{StaticResource InputCornerRadius}"
            FontSize="{StaticResource InputFontSize}"
            Background="{DynamicResource TextBoxBackgroundColor}"
            FontWeight="Light"
            HorizontalAlignment="Stretch" />

        <!-- Password Input (keeping your exact design with fixed password char) -->
        <controls:HintedTextBox
            Grid.Row="2"
            x:Name="PasswordTextBox"
            Background="{DynamicResource TextBoxBackgroundColor}"
            Watermark="Secure Key"
            Hint="Stored only on your device"
            CornerRadius="{StaticResource InputCornerRadius}"
            TextForeground="{DynamicResource TextBoxForegroundColor}"
            HintForeground="{DynamicResource TipsColor}"
            IconRegularSource="{DynamicResource LampIconDrawingRegular}"
            IconErrorSource="{DynamicResource LampIconDrawingError}"
            MainBorderBrush="Transparent"
            ValidationType="SecureKey"
            PasswordChar="●"
            FontSize="{StaticResource InputFontSize}"
            Height="{StaticResource InputHeight}"
            FontWeight="Light"
            HorizontalAlignment="Stretch" />

        <!-- Action Buttons (keeping your exact design) -->
        <Grid Grid.Row="3"
              HorizontalAlignment="Stretch"
              ColumnDefinitions="*,*"
              ColumnSpacing="{StaticResource ButtonSpacing}">
            <Button Grid.Column="0"
                    Content="Account recovery"
                    Command="{Binding AccountRecoveryCommand}"
                    Classes="auth-button recovery-button" />

            <Button Grid.Column="1"
                    Content="Continue"
                    Command="{Binding SignInCommand}"
                    Classes="auth-button continue-button" />
        </Grid>

    </Grid>
</UserControl>